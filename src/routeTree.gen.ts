/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as UserImport } from './routes/_user'
import { Route as AdminImport } from './routes/_admin'
import { Route as IndexImport } from './routes/index'
import { Route as AdminTaskImport } from './routes/_admin/task'
import { Route as AdminStreamImport } from './routes/_admin/stream'
import { Route as AdminFileImport } from './routes/_admin/file'
import { Route as AdminChatImport } from './routes/_admin/chat'
import { Route as UserIdIndexImport } from './routes/_user/$id/index'
import { Route as UserIdTaskImport } from './routes/_user/$id/task'
import { Route as UserIdStreamImport } from './routes/_user/$id/stream'
import { Route as UserIdFileImport } from './routes/_user/$id/file'
import { Route as UserIdChatImport } from './routes/_user/$id/chat'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const UserRoute = UserImport.update({
  id: '/_user',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminTaskRoute = AdminTaskImport.update({
  path: '/task',
  getParentRoute: () => AdminRoute,
} as any)

const AdminStreamRoute = AdminStreamImport.update({
  path: '/stream',
  getParentRoute: () => AdminRoute,
} as any)

const AdminFileRoute = AdminFileImport.update({
  path: '/file',
  getParentRoute: () => AdminRoute,
} as any)

const AdminChatRoute = AdminChatImport.update({
  path: '/chat',
  getParentRoute: () => AdminRoute,
} as any)

const UserIdIndexRoute = UserIdIndexImport.update({
  path: '/$id/',
  getParentRoute: () => UserRoute,
} as any)

const UserIdTaskRoute = UserIdTaskImport.update({
  path: '/$id/task',
  getParentRoute: () => UserRoute,
} as any)

const UserIdStreamRoute = UserIdStreamImport.update({
  path: '/$id/stream',
  getParentRoute: () => UserRoute,
} as any)

const UserIdFileRoute = UserIdFileImport.update({
  path: '/$id/file',
  getParentRoute: () => UserRoute,
} as any)

const UserIdChatRoute = UserIdChatImport.update({
  path: '/$id/chat',
  getParentRoute: () => UserRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_user': {
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_admin/chat': {
      preLoaderRoute: typeof AdminChatImport
      parentRoute: typeof AdminImport
    }
    '/_admin/file': {
      preLoaderRoute: typeof AdminFileImport
      parentRoute: typeof AdminImport
    }
    '/_admin/stream': {
      preLoaderRoute: typeof AdminStreamImport
      parentRoute: typeof AdminImport
    }
    '/_admin/task': {
      preLoaderRoute: typeof AdminTaskImport
      parentRoute: typeof AdminImport
    }
    '/_user/$id/chat': {
      preLoaderRoute: typeof UserIdChatImport
      parentRoute: typeof UserImport
    }
    '/_user/$id/file': {
      preLoaderRoute: typeof UserIdFileImport
      parentRoute: typeof UserImport
    }
    '/_user/$id/stream': {
      preLoaderRoute: typeof UserIdStreamImport
      parentRoute: typeof UserImport
    }
    '/_user/$id/task': {
      preLoaderRoute: typeof UserIdTaskImport
      parentRoute: typeof UserImport
    }
    '/_user/$id/': {
      preLoaderRoute: typeof UserIdIndexImport
      parentRoute: typeof UserImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AdminRoute.addChildren([
    AdminChatRoute,
    AdminFileRoute,
    AdminStreamRoute,
    AdminTaskRoute,
  ]),
  UserRoute.addChildren([
    UserIdChatRoute,
    UserIdFileRoute,
    UserIdStreamRoute,
    UserIdTaskRoute,
    UserIdIndexRoute,
  ]),
  LoginRoute,
  RegisterRoute,
])

/* prettier-ignore-end */
